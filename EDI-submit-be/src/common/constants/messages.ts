export const Messages = {
  Resource: {
    Created: 'Resource(s) successfully created',
    Updated: 'Resource(s) successfully updated',
    Deleted: 'Resource(s) successfully deleted',
    Found: 'Resource(s) found',
    AlreadyExist: 'Resource(s) already exist',
    NotFound: 'Resource(s) not found',
    NotExist: 'Resource(s) not exist',
    BadRequest: 'Bad Request'
  },
  Register: {
    AlreadyExist: 'Email-id already exist'
  },
  Login: {
    Unauthorised: 'Unauthorised Login',
    Authorised: 'Login Successful'
  },
  AuthModule: {
    AccountInactive: 'Your account is inactive. Contact your administrator to activate it',
    OTPSuccess: 'An OTP sent successfully',
    NotMatch: 'Email or password does not match'
  },
  UserModule: {
    Birth: 'Date of birth should not be future date',
    AccountCreated: 'Your account has been successfully created',
    Email: 'An OTP has been sent to your registerd email',
    ResendOtp: 'Otp has been expired. Please resend again',
    Otp: 'The OTP you entered is incorrect',
    EmailModified: 'Email should not be modified',
    OtpSuccess: 'An OTP sent successfully',
    UserActive: 'This user is active now',
    UserTemporarily: 'This user is inactive temporarily',
    Password: 'New Password should not be same as current password',
    PasswordChanged: 'Your password changed successfully',
    PasswordCorrect: 'Password should be correct as per userId',
    ValidUser: 'userId should be integer and valid',
    PasswordLength: 'Password must be 8 Characters Long',
    PasswordUppercase: 'Password must have at least one UPPERCASE character',
    PasswordSpecialChars: 'Password must contain at least one special character',
    UserFound: 'User found successfully',
    UserNotFound: 'User not found',
    UserUpdated: 'User updated successfully',
    UserDeleted: 'User deleted successfully',
    EmailNotExist: 'Email id not exist',
    PasswordUpdate: 'Password updated successfully',
    EmailOrOtpNotExist: 'Email or Otp not exist'
  }, 
  TempExperienceModule: {
    Created: 'Temp-experience created successfully',
    Found: 'Temp-experience found successfully',
    NotFound: 'Temp-experience not found',
    Updated: 'Temp-experience updated successfully',
    Deleted: 'Temp-experience deleted successfully',
    BulkUpload: {
      MinimumnOneRow: 'Required minimum one row to process schedule bulk upload',
      BulkTempExperience: 'File received successfully and in progress of validation and importing data.',
      ApproveBulkUpload: 'Experience approved successfully',
      AlreadyApproveBulkUpload: 'Bulk upload approved already',
      AccountNotExist: 'Account does not exist',
      CountryNotExist: 'Country does not exist',
      StateNotExist: 'State does not exist',
      // CustomerReferenceNumberNotExist: 'Customer reference number does not exist',
    },
    TradeTapeMapped: 'Trade tape mapped successfully',
    TradeTapeDeleted: 'Trade tape deleted successfully',
    UnMatchedColumns: 'Unmatched columns',
    DeleteTemplateColumnName: 'Delete template column name successfully' 
  },
  FileUploadModule: {
    Created: 'File-upload created successfully',
    Found: 'File-upload found successfully',
    NotFound: 'File-upload not found',
    Updated: 'File-upload updated successfully',
    Deleted: 'File-upload deleted successfully',
    EmptyFile: 'Empty file not allowed',
  },
  ExperienceModule: {
    Created: 'Experience created successfully',
    Found: 'Experience found successfully',
    NotFound: 'Experience not found',
    Updated: 'Experience updated successfully',
    Deleted: 'Experience deleted successfully',
    AlreadyExist: 'Details already available in Experience',
  },
  AccountModule: {
    Created: 'Account created successfully',
    Found: 'Account found successfully',
    NotFound: 'Account not found',
    Updated: 'Account updated successfully',
    Deleted: 'Account deleted successfully',
    NameNotEmpty: 'Name_1 should not be empty',
    CityNotEmpty: 'City should not be empty and should be character type only',
    CountryNotEmptyAndIntegerType: 'Country should not be empty and should be integer type',
    InvalidCountry: 'Invalid country',
    CreatedNotEmptyAndIntegerType: 'Created should not be empty and should be integer type',
    CreatedFormat: 'Created should be 8-digit and should be in YYYYMMDD format',
    StateEmpty: 'State should not be empty',
    StateFormat: 'State sholud be character type only and should be 2 character',
    BranchFormat: 'Branch sholud be character type only and should be 1 character',
    DateBusinessEstablished: 'Date business established should be in YYYY-MM-DD format',
    DateOfIncorporation: 'Date of incorporation should be in YYYY-MM-DD format',
    StateOfIncorporation: 'State of incorporation sholud be character type only and should be 2 character',
  },
  CountryModule: {
    Created: 'Country created successfully',
    Found: 'Country found successfully',
    NotFound: 'Country not found',
    Updated: 'Country updated successfully',
    Deleted: 'Country deleted successfully',
  },
  StateModule: {
    Created: 'State created successfully',
    Found: 'State found successfully',
    NotFound: 'State not found',
    Updated: 'State updated successfully',
    Deleted: 'State deleted successfully',
  },
  AccountXrefModule: {
    Created: 'Account-xref created successfully',
    Found: 'Account-xref found successfully',
    NotFound: 'Account-xref not found',
    Updated: 'Account-xref updated successfully',
    Deleted: 'Account-xref deleted successfully',
  },
  CustomerModule: {
    Created: 'Customer created successfully',
    Found: 'Customer found successfully',
    NotFound: 'Customer not found',
    Updated: 'Customer updated successfully',
    Deleted: 'Customer deleted successfully',
  },
  CustomerTemplateModule: {
    Created: 'Template has been saved and verfication start successfully',
    Found: 'Customer-template found successfully',
    NotFound: 'Customer-template not found',
    Updated: 'Customer-template updated successfully',
    Deleted: 'Customer-template deleted successfully',
    InvalidCustomerTemplate: 'Invalid customer template',
    Create: {
      CustomerRefNo: 'CustomerRefNo should be mandatory',
      AccountName1: 'AccountName1 should be mandatory',
      Address1: 'Address1 should be mandatory',
      City: 'City should be mandatory',
      ZipCode: 'Zipcode should be mandatory',
      StateCode: 'StateCode should be mandatory',
      FigureDate: 'FigureDate is not appropriate',
      Aging1_30: 'Aging1_30 should be mandatory',
      Aging31_60: 'Aging31_60 should be mandatory',
      Aging61_90: 'Aging61_90 should be mandatory',
    },
    Update: {
      CustomerRefNo: 'CustomerRefNo should be mandatory',
      AccountName1: 'AccountName1 should be mandatory',
      Address1: 'Address1 should be mandatory',
      City: 'City should be mandatory',
      ZipCode: 'Zipcode should be mandatory',
      StateCode: 'StateCode should be mandatory',
      FigureDate: 'FigureDate is not appropriate',
      Aging1_30: 'Aging1_30 should be mandatory',
      Aging31_60: 'Aging31_60 should be mandatory',
      Aging61_90: 'Aging61_90 should be mandatory',
    },
  },
  TempDataModule: {
    Created: 'Temp-data created successfully',
    Found: 'Temp-data found successfully',
    NotFound: 'Temp-data not found',
    Updated: 'Temp-data updated successfully',
    Deleted: 'Temp-data deleted successfully',
    PendingTradeTapeFound: 'Pending trade tape data found successfully',
    HeaderTradeTapeFound: 'Header trade tape data found successfully',
    HeaderTradeTapeNotFound: 'Header trade tape data not found',
    TemplateSettingMatched: 'Template setting matched successfully',
    TemplateSettingNotMatched: 'Template setting not matched',
    UnmatchedColumns: 'Unmatched columns',
  },
  ZipCodeModule: {
    Created: 'Zip-code created successfully',
    Found: 'Zip-code found successfully',
    NotFound: 'Zip-code not found',
    Updated: 'Zip-code updated successfully',
    Deleted: 'Zip-code deleted successfully',
  },
  DatasiteModule: {
    Created: 'Datasite created successfully',
    Found: 'Datasite found successfully',
    NotFound: 'Datasite not found',
    Updated: 'Datasite updated successfully',
    Deleted: 'Datasite deleted successfully',
  },
  RoleModule: {
    Name: 'Name should be text only',
    Created: 'Role created successfully',
    Found: 'Role found successfully',
    NotFound: 'Role not found',
    Updated: 'Role updated successfully',
    Deleted: 'Role deleted successfully',
    RoleExist: 'Already exist role!'
  },
  PermissionModule: {
    Created: 'Permission created successfully',
    Found: 'Permission found successfully',
    NotFound: 'Permission not found',
    Updated: 'Permission updated successfully',
    Deleted: 'Permission deleted successfully',
  },
  RolePermissionModule: {
    Created: 'Role-permission created successfully',
    Found: 'Role-permission found successfully',
    NotFound: 'Role-permission not found',
    Updated: 'Role-permission updated successfully',
    Deleted: 'Role-permission deleted successfully',
    RolePermissionExist: 'Already exist role-permission',
    PermissionGroup: 'Permission group found successfully'
  },
  CurrencyRateModule: {
    Created: 'Currency-rate created successfully',
    Found: 'Currency-rate found successfully',
    NotFound: 'Currency-rate not found',
    Updated: 'Currency-rate updated successfully',
    Deleted: 'Currency-rate deleted successfully',
    ExistCurrencyRate: 'Already exist currency with same wef-date'
  },
  TemplateStructureModule: {
    Created: 'Template-structure created successfully',
    Found: 'Template-structure found successfully',
    NotFound: 'Template-structure not found',
    Updated: 'Template-structure updated successfully',
    Deleted: 'Template-structure deleted successfully',
    AlreadyExistName: 'Already exists table column name'
  },
  EdiSubmitterModule: {
    Created: 'Edisubmiiter created successfully',
    Found: 'Edisubmiiter found successfully',
    NotFound: 'Edisubmiiter not found',
    Updated: 'Edisubmiiter updated successfully',
    Deleted: 'Edisubmiiter deleted successfully',
  },
};
